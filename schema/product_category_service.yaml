openapi: 3.0.0
info:
  description: product category composite service
  version: "1.0.0-oas3"
  title: hska webshop API
  contact:
    email: bla@thecout.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: category
    description: Operations available on category entity
  - name: product
    description: Operations available on product entity
paths:
  /product/search:
    get:
      tags:
        - product
      summary: searches products
      operationId: searchProduct
      description: Searches for products
      parameters:
        - in: query
          name: description
          description: description for product or catalog
          required: false
          schema:
            type: string
        - in: query
          name: minprice
          description: minimal price
          required: false
          schema:
            type: string
        - in: query
          name: maxprice
          description: maximal price
          required: false
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: bad input parameter
 
  /category:
    get:
      tags:
        - category
      summary: retrieves all categories
      operationId: getCategories
      description: get all categories
      responses:
        '200':
          description: get all categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '400':
          description: bad input parameter
    post:
      tags:
        - category
      summary: adds an category
      operationId: addCategory
      description: Adds an category to the system
      responses:
        '201':
          description: category created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing category already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
        description: category item to add
    delete:
      tags:
        - category
      summary: deletes a category
      operationId: deleteCategory
      description: deletes an category from the system
      responses:
        '201':
          description: category deleted
        '400':
          description: 'invalid input, object invalid'
  /product:
    put:
      tags:
        - product
      summary: updates an product
      operationId: updateProduct
      description: updates an product
      responses:
        '201':
          description: product updated
        '400':
          description: 'invalid input, object invalid'
        '404':
          description: this product does not exist
      requestBody:
        $ref: '#/components/requestBodies/Product'
    post:
      tags:
        - product
      summary: adds an product
      operationId: addProduct
      description: Adds an product to the system
      responses:
        '201':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing product already exists
      requestBody:
        $ref: '#/components/requestBodies/Product'
    delete:
      tags:
        - product
      summary: deletes a product
      operationId: deleteProduct
      description: deletes an product from the system
      responses:
        '201':
          description: product deleted
        '400':
          description: 'invalid input, object invalid'
    get:
      tags:
        - product
      summary: retrieves product
      operationId: getProduct
      description: get a product
      parameters:
        - in: query
          name: id
          description: the product id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: returns the product
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: bad input parameter
        '404':
          description: product not existing
servers:
  - url: 'https://virtserver.swaggerhub.com/anon767/HsKA/1.0.0'
components:
  requestBodies:
    Product:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'
      description: product item to add
  schemas:
    Product:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          example: 0
        name:
          type: string
          example: Cat
        price:
          type: number
          example: 50
        details:
          type: string
          example: fluffy pet
        category:
          type: string
          example: Pet
    Category:
      required:
        - name
        - id
      properties:
        name:
          type: string
          example: Pets
        id:
          type: integer
          example: 0
